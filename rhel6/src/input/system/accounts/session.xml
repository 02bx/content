<Group id="accounts-session">
<title>Secure Session Configuration Files for Login
Accounts</title>
<description>When a user logs into a Unix account, the system
configures the user's session by reading a number of files. Many of
these files are located in the user's home directory, and may have
weak permissions as a result of user error or misconfiguration. If
an attacker can modify or even read certain types of account
configuration information, he can often gain full access to the
affected user's account. Therefore, it is important to test and
correct configuration file permissions for interactive accounts,
particularly those of privileged users such as root or system
administrators.</description>
<Group id="root_paths">
<title>Ensure that No Dangerous Directories Exist in Roots Path
'</title>
<description>The active path of the root account can be obtained by
starting a new root shell and running:
<br />
<br />
<code># echo $PATH
<br /></code>This will produce a colon-separated list of
directories in the path. For each directory DIR in the path, ensure
that DIR is not equal to a single . character. Also ensure that
there are no 'empty' elements in the path, such as in these
examples:
<br />
<br />
<code>PATH=:/bin
<br />PATH=/bin:
<br />PATH=/bin::/sbin
<br /></code>
<br />These empty elements have the same effect as a single .
character.
<br />
<br />For each element in the path, run:
<br />
<br />
<code># ls -ld DIR
<br /></code>
<br />and ensure that write permissions are disabled for group and
other.
<br />
<br />It is important to prevent root from executing unknown or
untrusted programs, since such programs could contain malicious
code. Therefore, root should not run programs installed by
unprivileged users. Since root may often be working inside
untrusted directories, the . character, which represents the
current directory, should never be in the root path, nor should any
directory which can be written to by an unprivileged or
semi-privileged (system) user.
<br />
<br />It is a good practice for administrators to always execute
privileged commands by typing the full path to the
command.</description>
<Rule id="root_path_no_dot">
<title>The PATH variable should be set correctly for
user root</title>
<description>The PATH variable should be set correctly for user
root</description>
<ident cce="3301-9" />
<oval id="20085" />
<ref nist="CM6, CM-7"/>
</Rule>
<Rule id="root_path_no_groupother_writable">
<title>The path variable for ROOT does not include any
world-writable or group-writable directories</title>
<description>Check each directory in root's path and make use it
does not grant write permission to group and other</description>
<ident cce="14957-5" />
<oval id="200855" />
<ref nist="CM6, CM-7"/>
</Rule>
</Group>

<Group id="homedir_perms">
<title>Ensure that User Home Directories are not Group-Writable or
World-Readable</title>
<description>For each human user USER of the system, view the
permissions of the user's home directory:
<br />
<br />
<code># ls -ld /home/USER
<br /></code>
<br />Ensure that the directory is not group-writable and that it
is not world-readable. If necessary, repair the permissions:
<br />
<br />
<code># chmod g-w /home/USER
<br /># chmod o-rwx /home/USER
<br /></code>
<br />User home directories contain many configuration files which
affect the behavior of a user's account. No user should ever have
write permission to another user's home directory. Group shared
directories can be configured in subdirectories or elsewhere in the
filesystem if they are needed. Typically, user home directories
should not be world-readable. If a subset of users need read access
to one another's home directories, this can be provided using
groups.</description>
<warning category="general">Sections 2.3.4.2â€“2.3.4.5 recommend
modifying user home directories. Notify your user community, and
solicit input if appropriate, before making this type of
change.</warning>

<Rule id="homedir_perms_no_groupwrite_worldread">
<title>Ensure that User Home Directories are not
Group-Writable or World-Readable</title>
<description>File permissions should be set correctly for the home
directories for all user accounts.</description>
<ident cce="4090-7" />
<oval id="20086" />
<ref nist="AC-3, CM-6"/>
</Rule>
</Group>

<Group id="user_umask">
<title>Ensure that Users Have Sensible Umask Values</title>
<description>
<ol>
<li>Edit the global configuration files /etc/profile, /etc/bashrc,
and /etc/csh.cshrc. Add or correct the line:
<br />
<br />umask 077</li>
<li>Edit the user definitions file /etc/login.defs. Add or correct
the line:
<br />
<br />UMASK 077</li>
<li>View the additional configuration files /etc/csh.login and
/etc/profile.d/*, and ensure that none of these files redefine the
umask to a more permissive value unless there is a good reason for
it.</li>
<li>Edit the root shell configuration files /root/.bashrc,
/root/.bash profile, /root/.cshrc, and /root/.tcshrc. Add or
correct the line:
<br />
<br />umask 077</li>
</ol>With a default umask setting of 077, files and directories
created by users will not be readable by any other user on the
system. Users who wish to make specific files group- or
world-readable can accomplish this using the chmod command.
Additionally, users can make all their files readable to their
group by default by setting a umask of 027 in their shell
configuration files. If default per-user groups exist (that is, if
every user has a default group whose name is the same as that
user's username and whose only member is the user), then it may
even be safe for users to select a umask of 007, making it very
easy to intentionally share files with group s of which the user is
a member.
<br />
<br />In addition, it may be necessary to change root's umask
temporarily in order to install software or files which must be
readable by other users, or to change the default umasks of certain
service accounts such as the FTP user. However, setting a
restrictive default protects the files of users who have not taken
steps to make their files more available, and preventing files from
being inadvertently shared.</description>
<Value id="var-2.3.4.4" type="string"
operator="equals" interactive="0">
<title>Sensible umask</title>
<description>Enter default user umask</description>
<value selector="">027</value>
<value selector="007">007</value>
<value selector="022">022</value>
<value selector="027">027</value>
<value selector="077">077</value>
</Value>

<Rule id="user_umask_bashrc">
<title>The default umask for all users is set correctly
in /etc/bashrc</title>
<description>The default umask for all users for the bash shell
should be set to:
<sub idref="var-2.3.4.4" /></description>
<ident cce="3844-8" />
<oval id="20087" />
<ref nist="CM-6, CM-7"/>
</Rule>

<Rule id="user_umask_cshrc">
<title>The default umask for all users is set correctly
in /etc/csh.cshrc</title>
<description>The default umask for all users for the csh shell
should be set to:
<sub idref="var-2.3.4.4" /></description>
<ident cce="4227-5" />
<oval id="20088" />
<ref nist="CM-6, CM-7"/>
</Rule>

<Rule id="user_umask_logindefs">
<title>The default umask for all users is set correctly
in /etc/login.defs</title>
<description>The default umask for all users should be set to:
<sub idref="var-2.3.4.4" /></description>
<ident cce="14107-7" />
<oval id="20089" />
<ref nist="CM-6, CM-7"/>
</Rule>

<Rule id="user_umask_profile">
<title>The default umask for all users is set correctly
in /etc/profile</title>
<description>The default umask for all users should be set to:
<sub idref="var-2.3.4.4" /></description>
<ident cce="14847-8" />
<oval id="20090" />
<ref nist="CM-6, CM-7"/>
</Rule>
</Group>

</Group>
