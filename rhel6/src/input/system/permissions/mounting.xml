<Group id="mounting">
<title>Restrict Dynamic Mounting and Unmounting of
Filesystems</title>
<description>Linux includes a number of facilities for the
automated addition and removal of filesystems on a running system.
These facilities may increase convenience, but they all bring some
risk, whether direct risk from allowing unprivileged users to
introduce arbitrary filesystems to a machine, or risk that software
flaws in the automated mount facility itself will allow an attacker
to compromise the system.
<br /><br />
This command can be used to list the types of filesystems that are
available to the currently executing kernel:
<pre>
# find /lib/modules/`uname -r`/kernel/fs -type f -name '*.ko'

</pre>
If these filesystems are not required then they should be explicitly disabed
in the appropriate <tt>/etc/modprobe.d</tt> configuration file.
<br /><br />
Use caution when enabling any such facility, and find out
whether better configuration management or user education might
solve the same problem with less risk.</description>

<Rule id="kernel_module_usb-storage_disabled">
<title>Disable Modprobe Loading of USB Storage Driver</title>
<description>
If USB storage devices should not be used, the <tt>modprobe</tt> program
used for automatic kernel module loading should be configured to not load
the USB storage driver upon demand. Add the following line to
<tt>/etc/modprobe.conf</tt> to prevent loading of the <tt>usb-storage</tt>
kernel module:
<pre>
install usb-storage /bin/true

</pre>
This will prevent the <tt>modprobe</tt> program from loading the <tt>usb-storage</tt>
module, but will not prevent an administrator (or another program) from using the
<tt>insmod</tt> program to load the module manually.</description>
<ident cce="4187-1" />
<oval id="kernel_module_usb-storage_disabled" />
<ref nist="CM-6, CM-7" />
</Rule>

<Rule id="kernel_module_usb-storage_removed">
<title>Remove USB Storage Driver</title>
<description>If your system never requires the use of USB storage devices, then the
supporting driver can be permanently removed. Though more effective than disabling the
module within modprobe, this solution is less elegant than the modprobe method described
in "Disable Modprobe Loading of USB". The technique described here will cause the
command <tt>rpm -q --verify kernel</tt> to fail which may be an undesirable side effect.
<br /><br />
To permanently remove the USB storage driver from the system execute this command:
<pre>
# rm /lib/modules/<i>KERNEL-VERSION</i>/kernel/drivers/usb/storage/usb-storage.ko

</pre>
The variable <tt><i>KERNEL-VERSION</i></tt> can be determined using the <tt>uname -r</tt>
command which returns the version of the currently loaded kernel. The <tt>rm</tt> command
will need to be repeated every time the kernel is updated.</description>
<ident cce="4006-3" />
<oval id="kernel_module_usb-storage_removed" />
<ref nist="CM-6, CM-7" />
</Rule>

<Rule id="bootloader_nousb_argument">
<title>Disable Kernel Support for USB via Bootloader Configuration</title>
<description>
Another means of disabling USB storage is to disable all USB support provided
by the operating system. This can be accomplished by adding the <tt>nousb</tt>
argument to the kernel’s boot loader configuration. To disable kernel support
for USB, append “nousb” to the kernel line in /etc/grub.conf as follows:
<pre>
kernel /vmlinuz-<i>VERSION</i> ro vga=ext root=/dev/VolGroup00/LogVol00 rhgb quiet nousb

</pre>
<br /><br />
<i><b>WARNING:</b> Disabling all kernel support for USB will cause problems for systems with USB-based keyboards,
mice, or printers. This guidance is inappropriate for systems which require USB connectivity.</i></description>
<ident cce="4173-1" />
<oval id="bootloader_nousb_argument" />
<ref nist="CM-6, CM-7" />
</Rule>



<Rule id="disable_module_cramfs">
<title>Disable Mounting of <tt>cramfs</tt></title>
<description>Using the <tt>install</tt> command inside <tt>/etc/modprobe.conf</tt>
instructs the kernel module loading system to run the command
specified (here, <tt>/bin/true</tt>) instead of inserting the module in the
kernel as normal. This effectively prevents usage of these uncommon
filesystems.</description>
<ident cce="14089-7" />
<oval id="kernel_module_cramfs_disable" />
<ref nist="CM-6, CM-7" />
</Rule>

<Rule id="disable_module_freevxfs">
<title>Disable Mounting of <tt>freevxfs</tt></title>
<description>Using the <tt>install</tt> command inside <tt>/etc/modprobe.conf</tt>
instructs the kernel module loading system to run the command
specified (here, <tt>/bin/true</tt>) instead of inserting the module in the
kernel as normal. This effectively prevents usage of these uncommon
filesystems.</description>
<ident cce="14457-6" />
<oval id="kernel_module_freevxfs_disable" />
<ref nist="CM-6, CM-7" />
</Rule>

<Rule id="disable_module_jffs2">
<title>Disable Mounting of <tt>jffs2</tt></title>
<description>Using the <tt>install</tt> command inside <tt>/etc/modprobe.conf</tt>
instructs the kernel module loading system to run the command
specified (here, <tt>/bin/true</tt>) instead of inserting the module in the
kernel as normal. This effectively prevents usage of these uncommon
filesystems.</description>
<ident cce="14853-6" />
<oval id="kernel_module_jffs2_disable" />
<ref nist="CM-6, CM-7" />
</Rule>

<Rule id="disable_module_hfs">
<title>Disable Mounting of <tt>hfs</tt></title>
<description>Using the <tt>install</tt> command inside <tt>/etc/modprobe.conf</tt>
instructs the kernel module loading system to run the command
specified (here, <tt>/bin/true</tt>) instead of inserting the module in the
kernel as normal. This effectively prevents usage of these uncommon
filesystems.</description>
<ident cce="15087-0" />
<oval id="kernel_module_hfs_disable" />
<ref nist="CM-6, CM-7" />
</Rule>

<Rule id="disable_module_hfsplus">
<title>Disable Mounting of <tt>hfsplus</tt></title>
<description>Using the <tt>install</tt> command inside <tt>/etc/modprobe.conf</tt>
instructs the kernel module loading system to run the command
specified (here, <tt>/bin/true</tt>) instead of inserting the module in the
kernel as normal. This effectively prevents usage of these uncommon
filesystems.</description>
<ident cce="14093-9" />
<oval id="kernel_module_hfsplus_disable" />
<ref nist="CM-6, CM-7" />
</Rule>

<Rule id="disable_module_squashfs">
<title>Disable Mounting of <tt>squashfs</tt></title>
<description>Using the <tt>install</tt> command inside <tt>/etc/modprobe.conf</tt>
instructs the kernel module loading system to run the command
specified (here, <tt>/bin/true</tt>) instead of inserting the module in the
kernel as normal. This effectively prevents usage of these uncommon
filesystems.</description>
<ident cce="14118-4" />
<oval id="kernel_module_squashfs_disable" />
<ref nist="CM-6, CM-7" />
</Rule>

<Rule id="disable_module_udf">
<title>Disable Mounting of <tt>udf</tt></title>
<description>Using the <tt>install</tt> command inside <tt>/etc/modprobe.conf</tt>
instructs the kernel module loading system to run the command
specified (here, <tt>/bin/true</tt>) instead of inserting the module in the
kernel as normal. This effectively prevents usage of these uncommon
filesystems.</description>
<ident cce="14871-8" />
<oval id="kernel_module_udf_disable" />
<ref nist="CM-6, CM-7" />
</Rule>

<Rule id="disable_gnome_thumbnailers">
<title>Disable All GNOME Thumbnailers</title>
<description>The system’s default desktop environment, GNOME, uses
a number of different thumbnailer programs to generate thumbnails
for any new or modified content in an opened folder. The following
command can disable the execution of these thumbnail applications:
<pre>
# gconftool-2 --direct \
    --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory \
    --type bool \
    --set /desktop/gnome/thumbnailers/disable_all true

</pre>
This effectively prevents an attacker from gaining access to a
system through a flaw in GNOME’s Nautilus thumbnail creators.
</description>
<ident cce="TODO" />
<oval id="disable_gnome_thumbnailers" />
<ref nist="TODO" />
</Rule>

</Group>
