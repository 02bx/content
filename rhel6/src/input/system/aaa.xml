<Group id="group-2.3">
<title>Account and Access Control</title>
<description>In traditional Unix security, if an attacker gains
shell access to a certain login account, he can perform any action
or access any file to which that account has access. Therefore,
making it more difficult for unauthorized people to gain shell
access to accounts, particularly to privileged accounts, is a
necessary part of securing a system. This section introduces
mechanisms for restricting access to accounts under
RHEL5.</description>
<Group id="group-2.3.1">
<title>Protect Accounts by Restricting Password-Based Login</title>
<description>Conventionally, Unix shell accounts are accessed by
providing a username and password to a login program, which tests
these values for correctness using the /etc/passwd and /etc/shadow
files. Password-based login is vulnerable to guessing of weak
passwords, and to sniffing and man-in-the-middle attacks against
passwords entered over a network or at an insecure console.
Therefore, mechanisms for accessing accounts by entering usernames
and passwords should be restricted to those which are operationally
necessary.</description>
<Group id="group-2.3.1.1">
<title>Restrict Root Logins to System Console</title>
<description>Edit the file /etc/securetty. Ensure that the file
contains only the following lines:
<br />
<ul>
<li>The primary system console device:
<br />console</li>
<li>The virtual console devices:
<br />tty1 tty2 tty3 tty4 tty5 tty6 ...</li>
<li>If required by your organization, the deprecated virtual
console interface may be retained for backwards compatibility:
<br />vc/1 vc/2 vc/3 vc/4 vc/5 vc/6 ...</li>
<li>If required by your organization, the serial consoles may be
added:
<br />ttyS0 ttyS1</li>
</ul>Direct root logins should be allowed only for emergency use.
In normal situations, the administrator should access the system
via a unique unprivileged account, and use su or sudo to execute
privileged commands. Discouraging administrators from accessing the
root account directly ensures an audit trail in organizations with
multiple administrators. Locking down the channels through which
root can connect directly reduces opportunities for
password-guessing against the root account. The login program uses
the file /etc/securetty to determine which interfaces should allow
root logins. The virtual devices /dev/console and /dev/tty*
represent the system consoles (accessible via the Ctrl-Alt-F1
through Ctrl-Alt-F6 keyboard sequences on a default installation).
The default securetty file also contains /dev/vc/*. These are
likely to be deprecated in most environments, but may be retained
for compatibility. Root should also be prohibited from connecting
via network protocols. See Section 3.5 for instructions on
preventing root from logging in via SSH.</description>
<Rule id="rule-2.3.1.1.c">
<title>CCE-3485-0:Restrict virtual console Root Logins</title>
<description>Logins through the virtual console devices should be
disabled</description>
<ident cce="3485-0" />
<oval id="20063" />
</Rule>
<Rule id="rule-2.3.1.1.d">
<title>CCE-4256-4:Restrict serial port Root Logins</title>
<description>Login prompts on serial ports should be
disabled.</description>
<ident cce="4256-4" />
<oval id="20064" />
</Rule>
</Group>

<Group id="group-2.3.1.2">
<title>The wheel group should exist</title>
<description>
<ol>
<li>Ensure that the group wheel exists, and that the usernames of
all administrators who should be allowed to execute commands as
root are members of that group.
<br />
<br />
<code># grep ^wheel /etc/group</code></li>
<li>Edit the file /etc/pam.d/su. Add, uncomment, or correct the
line:
<br />
<code>auth required pam_wheel.so use_uid</code></li>
</ol>The su command allows a user to gain the privileges of another
user by entering the password for that user's account. It is
desirable to restrict the root user so that only known
administrators are ever allowed to access the root account. This
restricts password-guessing against the root account by
unauthorized users or by accounts which have been compromised.
<br />
<br />By convention, the group wheel contains all users who are
allowed to run privileged commands. The PAM module pam_wheel.so is
used to restrict root access to this set of users.</description>
<Rule id="rule-2.3.1.2.a">
<title>CCE-14088-9:Limit su Access to the Root Account</title>
<description>Limit su Access to the Root Account</description>
<ident cce="14088-9" />
<oval id="20065" />
</Rule>
<Rule id="rule-2.3.1.2.b">
<title>CCE-15047-4:Limit su Access to the wheel group</title>
<description>Command access to the root account should be
restricted to the wheel group.</description>
<ident cce="15047-4" />
<oval id="20066" />
</Rule>
</Group>
<Group id="group-2.3.1.4">
<title>Block Shell and Login Access for Non-Root System
Accounts</title>
<description>Using /etc/passwd, obtain a listing of all users,
their UIDs, and their shells, for instance by running:
<br />
<br />
<code># awk -F: '{print $1 ":" $3 ":" $7}' /etc/passwd
<br /></code>
<br />Identify the system accounts from this listing. These will
primarily be the accounts with UID numbers less than 500, other
than root.
<br />
<br />For each identified system account SYSACCT , lock the
account:
<br />
<br />
<code># usermod -L SYSACCT
<br /></code>and disable its shell:
<br />
<br />
<code># usermod -s /sbin/nologin SYSACCT
<br /></code>
<br />These are the accounts which are not associated with a human
user of the system, but which exist to perform some administrative
function. Make it more difficult for an attacker to use these
accounts by locking their passwords and by setting their shells to
some non-valid shell. The RHEL5 default non-valid shell is
/sbin/nologin, but any command which will exit with a failure
status and disallow execution of any further commands, such as
/bin/false or /dev/null, will work.</description>
<warning category="functionality">Do not perform the steps in this
section on the root account. Doing so might cause the system to
become inaccessible.</warning>


<Rule id="rule-2.3.1.4.a">
<title>CCE-3987-5:Block Shell and Login Access for Non-Root System
Accounts</title>
<description>Login access to non-root system accounts should be
disabled</description>
<ident cce="3987-5" />
<oval id="20068" />
</Rule>
</Group>
<Group id="group-2.3.1.5">
<title>Verify Proper Storage and Existence of Password
Hashes</title>
<description>TODO::INSERT</description>
<Group id="group-2.3.1.5.1">
<title>Verify that No Accounts Have Empty Password Fields</title>
<description>Run the command:
<br />
<br />
<code># awk -F: '($2 == "") {print}' /etc/shadow
<br /></code>
<br />If this produces any output, fix the problem by locking each
account (see Section 2.3.1.4 above) or by setting a password.
<br />
<br />If an account has an empty password, anybody may log in and
run commands with the privileges of that account. Accounts with
empty passwords should never be used in operational
environments.</description>
<Rule id="rule-2.3.1.5.1.a">
<title>CCE-4238-2:Verify that No Accounts Have Empty Password
Fields</title>
<description>Login access to accounts without passwords should be
disabled</description>
<ident cce="4238-2" />
<oval id="20069" />
</Rule>
</Group>
<Group id="group-2.3.1.5.2">
<title>Verify that All Account Password Hashes are Shadowed</title>
<description>To ensure that no password hashes are stored in
/etc/passwd, the following command should have no output:
<br />
<br />
<code># awk -F: '($2 != "x") {print}' /etc/passwd
<br /></code>
<br />The hashes for all user account passwords should be stored in
the Ô¨Åle /etc/shadow and never in /etc/passwd, which is readable by
all users.</description>
<Rule id="rule-2.3.1.5.2.a">
<title>CCE-14300-8:Verify that All Account Password Hashes are
Shadowed</title>
<description>Check that passwords are shadowed</description>
<ident cce="14300-8" />
<oval id="200695" />
</Rule>
</Group>
</Group>



<Group id="group-2.3.1.6">
<title>Verify that No Non-Root Accounts Have UID 0</title>
<description>This command will print all password file entries for
accounts with UID 0:
<br />
<br />
<code># awk -F: '($3 == "0") {print}' /etc/passwd
<br /></code>
<br />This should print only one line, for the user root. If any
other lines appear, ensure that these additional UID-0 accounts are
authorized, and that there is a good reason for them to exist.
<br />
<br />In general, the best practice solution for auditing use of
the root account is to restrict the set of cases in which root must
be accessed anonymously by requiring use of su or sudo in almost
all cases. Some sites choose to have more than one account with UID
0 in order to differentiate between administrators, but this
practice may have unexpected side effects, and is therefore not
recommended.</description>
<Rule id="rule-2.3.1.6.a">
<title>CCE-4009-7:Verify that No Non-Root Accounts Have UID
0</title>
<description>Anonymous root logins should be disabled</description>
<ident cce="4009-7" />
<oval id="20070" />
</Rule>
</Group>
<Group id="group-2.3.1.7">
<title>Set Password Expiration Parameters</title>
<description>Edit the file /etc/login.defs to specify password
expiration settings for new accounts. Add or correct the following
lines:
<br />
<br />
<code>PASS_MAX_DAYS=180
<br />PASS_MIN_DAYS=7
<br />PASS_MIN_LEN=8
<br />PASS_WARN_AGE=7
<br /></code>
<br />For each existing human user USER , modify the current
expiration settings to match these:
<br />
<code># chage -M 180 -m 7 -W 7 USER
<br /></code>
<br />Users should be forced to change their passwords, in order to
decrease the utility of compromised passwords. However, the need to
change passwords often should be balanced against the risk that
users will reuse or write down passwords if forced to change them
too often. Forcing password changes every 90-360 days, depending on
the environment, is recommended. Set the appropriate value as
PASS_MAX_DAYS and apply it to existing accounts with the -M flag.
<br />
<br />The PASS_MIN_DAYS (-m) setting prevents password changes for
7 days after the first change, to discourage password cycling. If
you use this setting, train users to contact an administrator for
an emergency password change in case a new password becomes
compromised. The PASS_WARN_AGE (-W) setting gives users 7 days of
warnings at login time that their passwords are about to expire.
<br />
<br />The PASS_MIN_LEN setting, which controls minimum password
length, should be set to whatever is required by your site or
organization security policy. The example value of 8 provided here
may be inadequate for many environments. See Section 2.3.3 for
information on how to enforce more sophisticated requirements on
password length and quality</description>
<Value id="var-2.3.1.7.a" type="string"
operator="equals" interactive="0">
<title>minimum password length</title>
<description>Minimum number of characters in password</description>
<warning category="general">This will only check new
passwords</warning>
<value selector="">14</value>
<value selector="6">6</value>


<!-- NIST 800-53 requires 1 in a million using brute force which translates to six numbers -->
<value selector="8">8</value>
<value selector="10">10</value>
<value selector="14">14</value>
</Value>
<Rule id="rule-2.3.1.7.a">
<title>CCE-4154-1:Set password minimum length</title>
<description>The password minimum length should be set
appropriately</description>
<ident cce="4154-1" />
<oval id="20071" />
</Rule>
<Rule id="rule-2.3.1.7.b">
<title>CCE-4180-6:Set minimum password age</title>
<description>The minimum password age should be set
appropriately</description>
<ident cce="4180-6" />
<oval id="20072" />
</Rule>
<Rule id="rule-2.3.1.7.c">
<title>CCE-4092-3:Set maximum password age</title>
<description>The maximum password age should be set to:
<sub idref="var-2.3.1.7.c" /></description>
<ident cce="4092-3" />
<oval id="20073" />
</Rule>
<Rule id="rule-2.3.1.7.d">
<title>CCE-4097-2:Set password warn age</title>
<description>The password warn age should be set to:
<sub idref="var-2.3.1.7.d" /></description>
<ident cce="4097-2" />
<oval id="20074" />
</Rule>
</Group>
<Group id="group-2.3.1.8">
<title>Remove Legacy + Entries from Password Files</title>
<description>The command:
<br />
<br />
<code># grep "^+:" /etc/passwd /etc/shadow /etc/group
<br /></code>
<br />should produce no output.
<br />
<br />The + symbol was used by systems to include data from NIS
maps into existing files. However, a certain configuration error in
which a NIS inclusion line appears in /etc/passwd, but NIS is not
running, could lead to anyone being able to access the system with
the username + and no password. Therefore, it is important to
verify that no such line appears in any of the relevant system
files.
<br />
<br />The correct way to tell the local system to consult network
databases such as LDAP or NIS for user information is to make
appropriate modifications to /etc/nsswitch.conf.</description>
<Rule id="rule-2.3.1.8.a">
<title>CCE-14071-5:Remove Legacy + Entries from /etc/shadow</title>
<description>NIS file inclusions should be set appropriately in the
/etc/shadow file</description>
<ident cce="14071-5" />
<oval id="20075" />
</Rule>
<Rule id="rule-2.3.1.8.b">
<title>CCE-14675-3:Remove Legacy + Entries from /etc/group</title>
<description>NIS file inclusions should be set appropriately in the
/etc/group file</description>
<ident cce="14675-3" />
<oval id="20076" />
</Rule>


<Rule id="rule-2.3.1.8.c">
<title>CCE-4114-5:Remove Legacy + Entries from /etc/passwd</title>
<description>NIS file inclusions should be set appropriately in the
/etc/passwd file</description>
<ident cce="4114-5" />
<oval id="20077" />
</Rule>
</Group>
</Group>
<Group id="group-2.3.3">
<title>Protect Accounts by Configuring PAM</title>
<description>PAM, or Pluggable Authentication Modules, is a system
which implements modular authentication for Linux programs. PAM is
well-integrated into Linux's authentication architecture, making it
difficult to remove, but it can be configured to minimize your
system's exposure to unnecessary risk. This section contains
guidance on how to accomplish that, and how to ensure that the
modules used by your PAM configuration do what they are supposed to
do.
<br />
<br />PAM is implemented as a set of shared objects which are
loaded and invoked whenever an application wishes to authenticate a
user. Typically, the application must be running as root in order
to take advantage of PAM. Traditional privileged network listeners
(e.g. sshd) or SUID programs (e.g. sudo) already meet this
requirement. An SUID root application, userhelper, is provided so
that programs which are not SUID or privileged themselves can still
take advantage of PAM.
<br />
<br />PAM looks in the directory /etc/pam.d for
application-specific configuration information. For instance, if
the program login attempts to authenticate a user, then PAM's
libraries follow the instructions in the file /etc/ pam.d/login to
determine what actions should be taken.
<br />
<br />One very important file in /etc/pam.d is
/etc/pam.d/system-auth. This file, which is included by many other
PAM configuration files, defines 'default' system authentication
measures. Modifying this file is a good way to make far-reaching
authentication changes, for instance when implementing a
centralized authentication service.</description>
<warning category="general">Be careful when making changes to PAM's
configuration files. The syntax for these files is complex, and
modifications can have unexpected consequences.1 The default
configurations shipped with applications should be sufficient for
most users.</warning>
<warning category="general">Running authconfig or
system-config-authentication will re-write the PAM configuration
files, destroying any manually made changes and replacing them with
a series of system defaults. 1One reference to the configuration
file syntax can be found at
http://www.kernel.org/pub/linux/libs/pam/Linux-PAM-html/
sag-configuration-file.html.</warning>
<Group id="group-2.3.3.1">
<title>Set Password Quality Requirements</title>
<description>The default pam_cracklib PAM module provides strength
checking for passwords. It performs a number of checks, such as
making sure passwords are not similar to dictionary words, are of
at least a certain length, are not the previous password reversed,
and are not simply a change of case from the previous password. It
can also require passwords to be in certain character classes.
<br />
<br />The pam_passwdqc PAM module provides the ability to enforce
even more stringent password strength requirements. It is provided
in an RPM of the same name.
<br />
<br />The man pages pam_cracklib(8) and pam_passwdqc(8) provide
information on the capabilities and configuration of
each.</description>


<Group id="group-2.3.3.1.1">
<title>Set Password Quality Requirements, if using
pam_cracklib</title>
<description>The pam_cracklib PAM module can be conÔ¨Ågured to meet
recommendations for DoD systems as stated in [12].
<br />
<br />To conÔ¨Ågure pam_cracklib to require at least one uppercase
character, lowercase character, digit, and other (special)
character, locate the following line in /etc/pam.d/system-auth:
<br />
<br />password requisite pam_cracklib.so try_first_pass retry=3
<br />
<br />and then alter it to read:
<br />
<br />password required pam_cracklib.so try_first_pass retry=3
minlen=14 dcredit=-1 / ucredit=-1 ocredit=-1 lcredit=0
<br />
<br />If necessary, modify the arguments to ensure compliance with
your organization‚Äôs security policy.</description>
<warning category="general">Note that the password quality
requirements are not enforced for the root account for some
reason.</warning>
<Value id="var-2.3.3.1.1.retry" type="number"
operator="equals" interactive="0">
<title>retry</title>
<description>Number of retry attempts before erroring
out</description>
<value selector="">3</value>
<value selector="1">1</value>
<value selector="2">2</value>
<value selector="3">3</value>
</Value>
<Value id="var-2.3.3.1.1.minlen" type="number"
operator="equals" interactive="0">
<title>minlen</title>
<description>Minimum number of characters in password</description>
<value selector="">12</value>
<value selector="6">6</value>
<!-- NIST 800-53 requires 1 in a million using brute force which translates to six numbers -->
<value selector="8">8</value>
<value selector="10">10</value>
<value selector="12">12</value>
<value selector="14">14</value>
<value selector="15">15</value>
</Value>
<Value id="var-2.3.3.1.1.dcredit" type="number"
operator="equals" interactive="0">
<title>dcredit</title>
<description>Mininum number of digits in password</description>
<value selector="">-2</value>
<value selector="2">-2</value>
<value selector="1">-1</value>
<value selector="0">0</value>
</Value>
<Value id="var-2.3.3.1.1.ocredit" type="number"
operator="equals" interactive="0">
<title>ocredit</title>
<description>Mininum number of other (special characters) in
password</description>
<value selector="">-2</value>
<value selector="2">-2</value>
<value selector="1">-1</value>
<value selector="0">0</value>
</Value>
<Value id="var-2.3.3.1.1.lcredit" type="number"
operator="equals" interactive="0">
<title>lcredit</title>
<description>Mininum number of lower case in password</description>
<value selector="">-2</value>
<value selector="2">-2</value>
<value selector="1">-1</value>
<value selector="0">0</value>
</Value>
<Value id="var-2.3.3.1.1.ucredit" type="number"
operator="equals" interactive="0">
<title>ucredit</title>
<description>Mininum number of upper case in password</description>
<value selector="">-2</value>
<value selector="2">-2</value>
<value selector="1">-1</value>
<value selector="0">0</value>
</Value>
<Value id="var-2.3.3.1.1.difok" type="number"
operator="equals" interactive="0">
<title>difok</title>
<description>Mininum number of characters not present in old
password</description>
<warning category="general">Keep this high for short
passwords</warning>
<value selector="">5</value>
<value selector="2">2</value>
<value selector="3">3</value>
<value selector="4">4</value>
<value selector="5">5</value>
</Value>
<Rule id="rule-2.3.3.1.1.a">
<title>CCE-15054-0:Set Password retry Requirements</title>
<description>The password retry should meet minimum
requirements</description>
<ident cce="15054-0" />
<oval id="200781" />
</Rule>
<Rule id="rule-2.3.3.1.1.c">
<title>CCE-14113-5:The password strength parameters should require
a minimum number of digits</title>
<description>The password dcredit should meet minimum
requirements</description>
<ident cce="14113-5" />
<oval id="141130" />
</Rule>
<Rule id="rule-2.3.3.1.1.d">
<title>CCE-14672-0:The password strength parameters should require
a minimum number of uppercase characters</title>
<description>The password ucredit should meet minimum
requirements</description>
<ident cce="14672-0" />
<oval id="200784" />
</Rule>
<Rule id="rule-2.3.3.1.1.e">
<title>CCE-14122-6:The password strenght parameters should require
a minimum number of special characters</title>
<description>The password strenght parameters should require a
minimum number of special characters</description>
<ident cce="14122-6" />
<oval id="200785" />
</Rule>
<Rule id="rule-2.3.3.1.1.f">
<title>CCE-14712-4:Set Password lcredit Requirements</title>
<description>The password strenght parameters should require a
minimum number of lowercase characters</description>
<ident cce="14712-4" />
<oval id="200786" />
</Rule>

<Rule id="rule-2.3.3.1.1.g">
<title>CCE-14701-7:The password strength parameters should require
new passwords to difer from old ones by a minimum number of
characters</title>
<description>The password difok should meet minimum
requirements</description>
<ident cce="14701-7" />
<oval id="200787" />
</Rule>
</Group>
</Group>
<Group id="group-2.3.3.2">
<title>Set Lockouts for Failed Password Attempts</title>
<description>The pam_tally2 PAM module provides the capability to
lock out user accounts after a number of failed login attempts. Its
documentation is available in
/usr/share/doc/pam-version/txts/README.pam_tally2.
<br />
<br />If locking out accounts after a number of incorrect login
attempts is required by your security policy, implement use of
pam_tally2.so for the relevant PAM-aware programs such as login,
sshd, and vsftpd.
<br />
<br />Find the following line in /etc/pam.d/system-auth:
<br />
<br />auth sufficient pam_unix.so nullok try_first_pass
<br />
<br />and then change it so that it reads as follows:
<br />
<br />auth required pam_unix.so nullok try_first_pass
<br />
<br />In the same file, comment out or delete the lines:
<br />
<br />auth requisite pam_succeed_if.so uid &gt;= 500 quiet
<br />auth required pam_deny.so
<br />
<br />To enforce password lockout, add the following to the
individual programs' configuration files in /etc/pam.d. First, add
to end of the auth lines:
<br />
<br />auth required pam_tally2.so deny=5 onerr=fail
<br />
<br />Second, add to the end of the account lines:
<br />
<br />account required pam_tally2.so
<br />
<br />Adjust the deny argument to conform to your system security
policy. The pam_tally2 utility can be used to unlock user accounts
as follows:
<br />
<br />
<code># /sbin/pam_tally2 --user username --reset
<br /></code></description>
<warning category="general">Locking out user accounts presents the
risk of a denial-of-service attack. The security policy regarding
system lockout must weigh whether the risk of such a
denial-of-service attack outweighs the benefits of thwarting
password guessing attacks. The pam_tally2 utility can be run from a
cron job on a hourly or daily basis to try and offset this
risk.</warning>
<Rule id="rule-2.3.3.2.a">
<title>CCE-3410-8:Set deny for Failed Password Attempts</title>
<description>The deny policy should meet minimum
requirements.</description>
<ident cce="3410-8" />
<oval id="200801" />
</Rule>
</Group>

<Group id="group-2.3.3.5">
<title>Upgrade Password Hashing Algorithm to SHA-512</title>
<description>The default algorithm for storing password hashes in
/etc/shadow is MD5. In release 5.2 (and for those systems fully
updated since its release), the algorithms SHA-256 and SHA-512 are
available.
<br />
<br />In order to conÔ¨Ågure the system to use the SHA-512 algorithm,
issue the command:
<br />
<br />
<code># /usr/sbin/authconfig --passalgo=sha512 --update
<br /></code>
<br />When users changes their passwords, hashes for the new
passwords will be generated using the SHA-512 algorithm.
<br />
<br />The release notes available at
http://www.redhat.com/docs/en-US/Red_Hat_
Enterprise_Linux/5.2/html/Release_Notes/singles/relnotesU2-x86.html
document this change. As noted there, only kickstart-installed
systems can be conÔ¨Ågured to begin operation with this algorithm.
Other systems will need to have this command issued and then all
accounts will need to perform a password change in order to upgrade
the stored hashes to the stronger algorithm.</description>
<Value id="var-2.3.3.5.a" type="string"
operator="equals" interactive="0">
<title>Password hashing algorithm</title>
<description>Enter /etc/shadow password hashing
algorithm</description>
<value selector="">sha512</value>
<value selector="MD5">md5</value>
<value selector="SHA-256">sha256</value>
<value selector="SHA-512">sha512</value>
</Value>
<Rule id="rule-2.3.3.5.a">
<title>CCE-14063-2:Set Password hashing algorithm</title>
<description>The password hashing algorithm should be set to
SHA-512</description>
<ident cce="14063-2" />
<oval id="20083" />
</Rule>
</Group>
<Group id="group-2.3.3.6">
<title>Limit Password Reuse</title>
<description>Do not allow users to reuse recent passwords. This can
be accomplished by using the remember option for the pam_unix PAM
module. In order to prevent a user from re-using any of his or her
last 5 passwords, append remember=5 to the password line which uses
the pam_unix module in the Ô¨Åle /etc/pam.d/system-auth, as shown:
<br />
<br />password sufficient pam_unix.so existing_options remember=5
<br />
<br />Old (and thus no longer valid) passwords are stored in the
Ô¨Åle /etc/security/opasswd.</description>
<Value id="var-2.3.3.6.a" type="number"
operator="equals" interactive="0">
<title>remember</title>
<description>The last n passwords for each user are saved in
/etc/security/opasswd in order to force password change history and
keep the user from alternating between the same password too
frequently.</description>
<value selector="">5</value>
<value selector="0">0</value>
<value selector="5">5</value>
<value selector="10">10</value>
</Value>
<Rule id="rule-2.3.3.6.a">
<title>CCE-14939-3:Limit password reuse</title>
<description>The passwords to remember should be set to:
<sub idref="var-2.3.3.6.a" /></description>
<ident cce="14939-3" />
<oval id="20084" />
</Rule>
</Group>
</Group>

<Group id="group-2.3.4">
<title>Secure Session Configuration Files for Login
Accounts</title>
<description>When a user logs into a Unix account, the system
configures the user's session by reading a number of files. Many of
these files are located in the user's home directory, and may have
weak permissions as a result of user error or misconfiguration. If
an attacker can modify or even read certain types of account
configuration information, he can often gain full access to the
affected user's account. Therefore, it is important to test and
correct configuration file permissions for interactive accounts,
particularly those of privileged users such as root or system
administrators.</description>
<Group id="group-2.3.4.1">
<title>Ensure that No Dangerous Directories Exist in Roots Path
'</title>
<description>The active path of the root account can be obtained by
starting a new root shell and running:
<br />
<br />
<code># echo $PATH
<br /></code>This will produce a colon-separated list of
directories in the path. For each directory DIR in the path, ensure
that DIR is not equal to a single . character. Also ensure that
there are no 'empty' elements in the path, such as in these
examples:
<br />
<br />
<code>PATH=:/bin
<br />PATH=/bin:
<br />PATH=/bin::/sbin
<br /></code>
<br />These empty elements have the same effect as a single .
character.
<br />
<br />For each element in the path, run:
<br />
<br />
<code># ls -ld DIR
<br /></code>
<br />and ensure that write permissions are disabled for group and
other.
<br />
<br />It is important to prevent root from executing unknown or
untrusted programs, since such programs could contain malicious
code. Therefore, root should not run programs installed by
unprivileged users. Since root may often be working inside
untrusted directories, the . character, which represents the
current directory, should never be in the root path, nor should any
directory which can be written to by an unprivileged or
semi-privileged (system) user.
<br />
<br />It is a good practice for administrators to always execute
privileged commands by typing the full path to the
command.</description>
<Rule id="rule-2.3.4.1.1.a">
<title>CCE-3301-9:The PATH variable should be set correctly for
user root</title>
<description>The PATH variable should be set correctly for user
root</description>
<ident cce="3301-9" />
<oval id="20085" />
</Rule>
<Rule id="rule-2.3.4.1.2.a">
<title>CCE-14957-5:The path variable for ROOT does not include any
world-writable or group-writable directories</title>
<description>Check each directory in root's path and make use it
does not grant write permission to group and other</description>
<ident cce="14957-5" />
<oval id="200855" />
</Rule>
</Group>

<Group id="group-2.3.4.2">
<title>Ensure that User Home Directories are not Group-Writable or
World-Readable</title>
<description>For each human user USER of the system, view the
permissions of the user's home directory:
<br />
<br />
<code># ls -ld /home/USER
<br /></code>
<br />Ensure that the directory is not group-writable and that it
is not world-readable. If necessary, repair the permissions:
<br />
<br />
<code># chmod g-w /home/USER
<br /># chmod o-rwx /home/USER
<br /></code>
<br />User home directories contain many configuration files which
affect the behavior of a user's account. No user should ever have
write permission to another user's home directory. Group shared
directories can be configured in subdirectories or elsewhere in the
filesystem if they are needed. Typically, user home directories
should not be world-readable. If a subset of users need read access
to one another's home directories, this can be provided using
groups.</description>
<warning category="general">Sections 2.3.4.2‚Äì2.3.4.5 recommend
modifying user home directories. Notify your user community, and
solicit input if appropriate, before making this type of
change.</warning>
<Rule id="rule-2.3.4.2.a">
<title>CCE-4090-7:Ensure that User Home Directories are not
Group-Writable or World-Readable</title>
<description>File permissions should be set correctly for the home
directories for all user accounts.</description>
<ident cce="4090-7" />
<oval id="20086" />
</Rule>
</Group>
<Group id="group-2.3.4.4">
<title>Ensure that Users Have Sensible Umask Values</title>
<description>
<ol>
<li>Edit the global configuration files /etc/profile, /etc/bashrc,
and /etc/csh.cshrc. Add or correct the line:
<br />
<br />umask 077</li>
<li>Edit the user definitions file /etc/login.defs. Add or correct
the line:
<br />
<br />UMASK 077</li>
<li>View the additional configuration files /etc/csh.login and
/etc/profile.d/*, and ensure that none of these files redefine the
umask to a more permissive value unless there is a good reason for
it.</li>
<li>Edit the root shell configuration files /root/.bashrc,
/root/.bash profile, /root/.cshrc, and /root/.tcshrc. Add or
correct the line:
<br />
<br />umask 077</li>
</ol>With a default umask setting of 077, files and directories
created by users will not be readable by any other user on the
system. Users who wish to make specific files group- or
world-readable can accomplish this using the chmod command.
Additionally, users can make all their files readable to their
group by default by setting a umask of 027 in their shell
configuration files. If default per-user groups exist (that is, if
every user has a default group whose name is the same as that
user's username and whose only member is the user), then it may
even be safe for users to select a umask of 007, making it very
easy to intentionally share files with group s of which the user is
a member.
<br />
<br />In addition, it may be necessary to change root's umask
temporarily in order to install software or files which must be
readable by other users, or to change the default umasks of certain
service accounts such as the FTP user. However, setting a
restrictive default protects the files of users who have not taken
steps to make their files more available, and preventing files from
being inadvertently shared.</description>
<Value id="var-2.3.4.4" type="string"
operator="equals" interactive="0">
<title>Sensible umask</title>
<description>Enter default user umask</description>
<value selector="">027</value>
<value selector="007">007</value>
<value selector="022">022</value>
<value selector="027">027</value>
<value selector="077">077</value>
</Value>
<Rule id="rule-2.3.4.4.a">
<title>CCE-3844-8:The default umask for all users is set correctly
in /etc/bashrc</title>
<description>The default umask for all users for the bash shell
should be set to:
<sub idref="var-2.3.4.4" /></description>
<ident cce="3844-8" />
<oval id="20087" />
</Rule>
<Rule id="rule-2.3.4.4.b">
<title>CCE-4227-5:The default umask for all users is set correctly
in /etc/csh.cshrc</title>
<description>The default umask for all users for the csh shell
should be set to:
<sub idref="var-2.3.4.4" /></description>
<ident cce="4227-5" />
<oval id="20088" />
</Rule>
<Rule id="rule-2.3.4.4.c">
<title>CCE-14107-7:The default umask for all users is set correctly
in /etc/login.defs</title>
<description>The default umask for all users should be set to:
<sub idref="var-2.3.4.4" /></description>
<ident cce="14107-7" />
<oval id="20089" />
</Rule>
<Rule id="rule-2.3.4.4.d">
<title>CCE-14847-8:The default umask for all users is set correctly
in /etc/profile</title>
<description>The default umask for all users should be set to:
<sub idref="var-2.3.4.4" /></description>
<ident cce="14847-8" />
<oval id="20090" />
</Rule>
</Group>
</Group>
<Group id="group-2.3.5">
<title>Protect Physical Console Access</title>
<description>It is impossible to fully protect a system from an
attacker with physical access, so securing the space in which the
system is located should be considered a necessary step. However,
there are some steps which, if taken, make it more difficult for an
attacker to quickly or undetectably modify a system from its
console.</description>
<Group id="group-2.3.5.2">
<title>Set Boot Loader Password</title>
<description>During the boot process, the boot loader is
responsible for starting the execution of the kernel and passing
options to it. The boot loader allows for the selection of
different kernels ‚Äì possibly on different partitions or media.
Options it can pass to the kernel include 'single-user mode,' which
provides root access without any authentication, and the ability to
disable SELinux. To prevent local users from modifying the boot
parameters and endangering security, the boot loader configuration
should be protected with a password.
<br />
<br />The default RHEL boot loader for x86 systems is called GRUB.
To protect its configuration:
<br />

<ol>
<li>Select a password and then generate a hash from it by running:
<br />
<br />
<code># grub-md5-crypt</code></li>
<li>Insert the following line into /etc/grub.conf immediately after
the header comments. (Use the output from grub-md5-crypt as the
value of password-hash ):
<br />
<br />
<code>password --md5 password-hash</code></li>
<li>Verify the permissions on /etc/grub.conf (which is a symlink to
../boot/grub/grub.conf):
<br />
<br />
<code># chown root:root /etc/grub.conf
<br /># chmod 600 /etc/grub.conf</code></li>
</ol>Boot loaders for other platforms should offer a similar
password protection feature.</description>
<Value id="var-2.3.5.2.a" type="string"
operator="equals" interactive="0">
<title>User that owns /etc/grub.conf</title>
<description>Choose user that should own
/etc/grub.conf</description>
<value selector="root">root</value>
</Value>
<Value id="var-2.3.5.2.b" type="string"
operator="equals" interactive="0">
<title>Group that owns /etc/grub.conf</title>
<description>Choose group that should own
/etc/grub.conf</description>
<value selector="root">root</value>
</Value>
<Rule id="rule-2.3.5.2.a">
<title>CCE-4144-2:Set Boot Loader user owner</title>
<description>The /etc/grub.conf file should be owned by
root.</description>
<ident cce="4144-2" />
<oval id="20092" />
</Rule>
<Rule id="rule-2.3.5.2.b">
<title>CCE-4197-0:Set Boot Loader group owner</title>
<description>The /etc/grub.conf file should be owned by group
root.</description>
<ident cce="4197-0" />
<oval id="20093" />
</Rule>
<Rule id="rule-2.3.5.2.c">
<title>CCE-3923-0:Set permission on /etc/grub.conf</title>
<description>File permissions for /etc/grub.conf should be set
correctly.</description>
<ident cce="3923-0" />
<oval id="20094" />
</Rule>
<Rule id="rule-2.3.5.2.d">
<title>CCE-3818-2:Set Boot Loader Password</title>
<description>The grub boot loader should have password protection
enabled</description>
<ident cce="3818-2" />
<oval id="20095" />
</Rule>
</Group>
<Group id="group-2.3.5.3">
<title>Require Authentication for Single-User Mode</title>
<description>Single-user mode is intended as a system recovery
method, providing a single user root access to the system by
providing a boot option at startup. By default, no authentication
is performed if single-user mode is selected. This provides a
trivial mechanism of bypassing security on the machine and gaining
root access.
<br />
<br />To require entry of the root password even if the system is
started in single-user mode, add the following line to the
/etc/inittab file:
<br />
<br />~~:S:wait:/sbin/sulogin</description>

<Rule id="rule-2.3.5.3.a">
<title>CCE-4241-6:Require Authentication for Single-User
Mode</title>
<description>The requirement for a password to boot into
single-user mode should be enabled.</description>
<ident cce="4241-6" />
<oval id="20096" />
</Rule>
</Group>
<Group id="group-2.3.5.4">
<title>Disable Interactive Boot</title>
<description>Edit the file /etc/sysconfig/init. Add or correct the
setting:
<br />
<br />PROMPT=no
<br />The PROMPT option allows the console user to perform an
interactive system startup, in which it is possible to select the
set of services which are started on boot. Using interactive boot,
the console user could disable auditing, firewalls, or other
services, weakening system security.</description>
<Rule id="rule-2.3.5.4.a">
<title>CCE-4245-7:Disable Interactive Boot</title>
<description>The ability for users to perform interactive startups
should be disabled.</description>
<ident cce="4245-7" />
<oval id="20097" />
</Rule>
</Group>
<Group id="group-2.3.5.6">
<title>Configure Screen Locking</title>
<description>When a user must temporarily leave an account
logged-in, screen locking should be employed to prevent passersby
from abusing the account. User education and training is
particularly important for screen locking to be effective.
<br />
<br />A policy should be implemented that trains all users to lock
the screen when they plan to temporarily step away from a logged-in
account. Automatic screen locking is only meant as a safeguard for
those cases where a user forgot to lock the screen.</description>
<Group id="group-2.3.5.6.1">
<title>Configure GUI Screen Locking</title>
<description>In the default GNOME desktop, the screen can be locked
by choosing Lock Screen from the System menu.
<br />
<br />The gconftool-2 program can be used to enforce mandatory
screen locking settings for the default GNOME environment. Run the
following commands to enforce idle activation of the screen saver,
screen locking, a blank-screen screensaver, and 15-minute idle
activation time:
<br />
<br />
<pre>


<code> # gconftool-2 --direct \ --config-source

    xml:readwrite:/etc/gconf/gconf.xml.mandatory \ --type bool \

    --set /apps/gnome-screensaver/idle_activation_enabled true #

    gconftool-2 --direct \ --config-source

    xml:readwrite:/etc/gconf/gconf.xml.mandatory \ --type bool \

    --set /apps/gnome-screensaver/lock_enabled true # gconftool-2

    --direct \ --config-source

    xml:readwrite:/etc/gconf/gconf.xml.mandatory \ --type string \

    --set /apps/gnome-screensaver/mode blank-only # gconftool-2

    --direct \ --config-source

    xml:readwrite:/etc/gconf/gconf.xml.mandatory \ --type int \

    --set /apps/gnome-screensaver/idle_delay 15 </code>

</pre>
<br />The default setting of 15 minutes for idle activation is
reasonable for many office environments, but the setting should
conform to whatever policy is defined. The screensaver mode
blank-only is selected to conceal the contents of the display from
passersby.
<br />
<br />Because users should be trained to lock the screen when they
step away from the computer, the automatic locking feature is only
meant as a backup. The Lock Screen icon from the System menu can
also be dragged to the taskbar in order to facilitate even more
convenient screen-locking.
<br />
<br />The root account cannot be screen-locked, but this should
have no practical effect as the root account should never be used
to log into an X Windows environment, and should only be used to
for direct login via console in emergency circumstances.
<br />
<br />For more information about configuring GNOME screensaver, see
http://live.gnome.org/GnomeScreensaver. For more information about
enforcing preferences in the GNOME environment using the GConf
configuration system, see http://www.gnome.org/projects/gconf and
the man page gconftool-2(1).</description>
<Value id="var-2.3.5.5" type="string"
operator="equals">
<title>Inactivity timout</title>
<description>Choose allowed duration of inactive SSH connections,
shells, and X sessions</description>
<value>15</value>
<value selector="0_minutes">0</value>
<value selector="10_minutes">10</value>
<value selector="15_minutes">15</value>
</Value>
<Rule id="rule-2.3.5.6.1.a">
<title>CCE-3315-9:Implement Inactivity Time-out for Login
Shells</title>
<description>The idle time-out value for period of inactivity gnome
desktop lockout should be 15 minutes</description>
<ident cce="3315-9" />
<oval id="20100" />
</Rule>
<Rule id="rule-2.3.5.6.1.b">
<title>CCE-14604-3:The gnome desktop screensaver should be enabled
or disabled as appropriate as a mandatory setting for all
users.</title>
<description>Idle activation of the screen saver should be
enabled</description>
<ident cce="14604-3" />
<oval id="201005" />
</Rule>

<Rule id="rule-2.3.5.6.1.c">
<title>CCE-14023-6:Implement idle activation of screen lock</title>
<description>Idle activation of the screen lock should be
enabled</description>
<ident cce="14023-6" />
<oval id="201006" />
</Rule>
<Rule id="rule-2.3.5.6.1.d">
<title>CCE-14735-5:Implement blank screen saver</title>
<description>The screen saver should be blank</description>
<ident cce="14735-5" />
<oval id="201007" />
</Rule>
</Group>
<Group id="group-2.3.5.6.2">
<title>Configure Console Screen Locking</title>
<description>A console screen locking mechanism is provided in the
vlock package, which is not installed by default. If the ability to
lock console screens is necessary, install the vlock package:
<br />
<br />
<code># yum install vlock
<br /></code>
<br />Instruct users to invoke the program when necessary, in order
to prevent passersby from abusing their login:
<br />
<code>$ vlock
<br /></code>
<br />The -a option can be used to prevent switching to other
virtual consoles.</description>
<Rule id="rule-2.3.5.6.2.a">
<title>CCE-3910-7:Configure console screen locking</title>
<description>The vlock package should be installed</description>
<ident cce="3910-7" />
<oval id="20101" />
</Rule>
</Group>
</Group>
</Group>
<Group id="group-2.3.7">
<title>Warning Banners for System Accesses</title>
<description>Each system should expose as little information about
itself as possible.
<br />
<br />System banners, which are typically displayed just before a
login prompt, give out information about the service or the host's
operating system. This might include the distribution name and the
system kernel version, and the particular version of a network
service. This information can assist intruders in gaining access to
the system as it can reveal whether the system is running
vulnerable software. Most network services can be configured to
limit what information is displayed.
<br />
<br />Many organizations implement security policies that require a
system banner provide notice of the system's ownership, provide
warning to unauthorized users, and remind authorized users of their
consent to monitoring.</description>
<Value id="var-2.3.7" type="string"
operator="equals" interactive="0">
<title>login banner verbiage</title>
<description>Enter an appropriate login banner for your
organization</description>
<value selector="any_text">.+</value>
</Value>

<Group id="group-2.3.7.1">
<title>Modify the System Login Banner</title>
<description>The contents of the file /etc/issue are displayed on
the screen just above the login prompt for users logging directly
into a terminal. Remote login programs such as SSH or FTP can be
configured to display /etc/issue as well. Instructions for
configuring each server daemon to show this file can be found in
the relevant sections of Chapter 3.
<br />
<br />By default, the system will display the version of the OS,
the kernel version, and the host name.
<br />
<br />Edit /etc/issue. Replace the default text with a message
compliant with the local site policy or a legal
disclaimer.</description>
<Rule id="rule-2.3.7.1.a">
<title>CCE-4060-0:Modify the System Login Banner</title>
<description>The system login banner text should be:
<sub idref="var-2.3.7" /></description>
<ident cce="4060-0" />
<oval id="20102" />
</Rule>
</Group>
<Group id="group-2.3.7.2">
<title>Implement a GUI Warning Banner</title>
<description>In the default graphical environment, users logging
directly into the system are greeted with a login screen provided
by the GNOME display manager. The warning banner should be
displayed in this graphical environment for these users.
<br />
<br />The files for the default RHEL theme can be found in
/usr/share/gdm/themes/RHEL. Add the following sample block of XML
to /usr/share/gdm/themes/RHEL/RHEL.xml after the first two "pixmap"
entries:
<br />
<pre>
 &lt;item type="rect"&gt; &lt;pos anchor="n" x="50%" y="10"
                                                         width="box"
                                                         height="box"/&gt; &lt;box&gt; &lt;item type="label"&gt;
                                                                                                                 &lt;normal
                                                                                                                 font="Sans 14" color="#ffffff"/&gt; &lt;text&gt;Insert the
                                                                                                                                                                         text of
                                                                                                                                                                         your warning banner here.&lt;/text&gt; &lt;/item&gt;

&lt;/box&gt; &lt;/item&gt;
</pre>
<br />The full syntax that GDM theme files expect is documented
elsewhere, but the above XML will create a text box centered at the
top of the screen. The font, text color, and exact positioning can
all be easily modified by editing the appropriate values. The
latest current GDM theme manual can be found at
http://www.gnome.org/
projects/gdm/docs/thememanual.html.</description>
<Rule id="rule-2.3.7.2.a">
<title>CCE-4188-9:Implement a GUI Warning Banner</title>
<description>The direct gnome login warning banner text should be
set appropriately</description>
<ident cce="4188-9" />
<oval id="20103" />
</Rule>
</Group>
</Group>
</Group>





