<def-group>
  <definition class="compliance" id="service_SERVICE_NAME_enabled"
  version="1">
    <metadata>
      <title>Service SERVICE_NAME Enabled</title>
      <affected family="unix">
        <platform>Red Hat Enterprise Linux 6</platform>
      </affected>
      <reference ref_id="SERVICE_CCE" source="CCE" />
      <description>The SERVICE_NAME service should be enabled if
      possible. This check was generated by the
      'create_services_enabled.py' script in the templates
      directory.</description>
    </metadata>
    <criteria comment="package PACKAGE_NAME is installed and service SERVICE_NAME is configured to start"
    operator="AND">
      <extend_definition comment="package PACKAGE_NAME is installed"
      definition_ref="package_PACKAGE_NAME_installed" />
      <criteria operator="OR"
      comment="service SERVICE_NAME is configured to start">
        <criterion comment="SERVICE_NAME runlevel 0"
        test_ref="test_runlevel0_SERVICE_NAME" />
        <criterion comment="SERVICE_NAME runlevel 1"
        test_ref="test_runlevel1_SERVICE_NAME" />
        <criterion comment="SERVICE_NAME runlevel 2"
        test_ref="test_runlevel2_SERVICE_NAME" />
        <criterion comment="SERVICE_NAME runlevel 3"
        test_ref="test_runlevel3_SERVICE_NAME" />
        <criterion comment="SERVICE_NAME runlevel 4"
        test_ref="test_runlevel4_SERVICE_NAME" />
        <criterion comment="SERVICE_NAME runlevel 5"
        test_ref="test_runlevel5_SERVICE_NAME" />
        <criterion comment="SERVICE_NAME runlevel 6"
        test_ref="test_runlevel6_SERVICE_NAME" />
      </criteria>
    </criteria>
  </definition>
  <unix:runlevel_test check="all" check_existence="any_exist"
  comment="Runlevel test" id="test_runlevel0_SERVICE_NAME"
  version="2">
    <unix:object object_ref="obj_runlevel0_SERVICE_NAME" />
    <unix:state state_ref="state_service_on" />
  </unix:runlevel_test>
  <unix:runlevel_test check="all" check_existence="any_exist"
  comment="Runlevel test" id="test_runlevel1_SERVICE_NAME"
  version="2">
    <unix:object object_ref="obj_runlevel1_SERVICE_NAME" />
    <unix:state state_ref="state_service_on" />
  </unix:runlevel_test>
  <unix:runlevel_test check="all" check_existence="any_exist"
  comment="Runlevel test" id="test_runlevel2_SERVICE_NAME"
  version="2">
    <unix:object object_ref="obj_runlevel2_SERVICE_NAME" />
    <unix:state state_ref="state_service_on" />
  </unix:runlevel_test>
  <unix:runlevel_test check="all" check_existence="any_exist"
  comment="Runlevel test" id="test_runlevel3_SERVICE_NAME"
  version="2">
    <unix:object object_ref="obj_runlevel3_SERVICE_NAME" />
    <unix:state state_ref="state_service_on" />
  </unix:runlevel_test>
  <unix:runlevel_test check="all" check_existence="any_exist"
  comment="Runlevel test" id="test_runlevel4_SERVICE_NAME"
  version="2">
    <unix:object object_ref="obj_runlevel4_SERVICE_NAME" />
    <unix:state state_ref="state_service_on" />
  </unix:runlevel_test>
  <unix:runlevel_test check="all" check_existence="any_exist"
  comment="Runlevel test" id="test_runlevel5_SERVICE_NAME"
  version="2">
    <unix:object object_ref="obj_runlevel5_SERVICE_NAME" />
    <unix:state state_ref="state_service_on" />
  </unix:runlevel_test>
  <unix:runlevel_test check="all" check_existence="any_exist"
  comment="Runlevel test" id="test_runlevel6_SERVICE_NAME"
  version="2">
    <unix:object object_ref="obj_runlevel6_SERVICE_NAME" />
    <unix:state state_ref="state_service_on" />
  </unix:runlevel_test>
  <unix:runlevel_object id="obj_runlevel0_SERVICE_NAME"
  version="1">
    <unix:service_name>SERVICE_NAME</unix:service_name>
    <unix:runlevel operation="equals">0</unix:runlevel>
  </unix:runlevel_object>
  <unix:runlevel_object id="obj_runlevel1_SERVICE_NAME"
  version="1">
    <unix:service_name>SERVICE_NAME</unix:service_name>
    <unix:runlevel operation="equals">1</unix:runlevel>
  </unix:runlevel_object>
  <unix:runlevel_object id="obj_runlevel2_SERVICE_NAME"
  version="1">
    <unix:service_name>SERVICE_NAME</unix:service_name>
    <unix:runlevel operation="equals">2</unix:runlevel>
  </unix:runlevel_object>
  <unix:runlevel_object id="obj_runlevel3_SERVICE_NAME"
  version="1">
    <unix:service_name>SERVICE_NAME</unix:service_name>
    <unix:runlevel operation="equals">3</unix:runlevel>
  </unix:runlevel_object>
  <unix:runlevel_object id="obj_runlevel4_SERVICE_NAME"
  version="1">
    <unix:service_name>SERVICE_NAME</unix:service_name>
    <unix:runlevel operation="equals">4</unix:runlevel>
  </unix:runlevel_object>
  <unix:runlevel_object id="obj_runlevel5_SERVICE_NAME"
  version="1">
    <unix:service_name>SERVICE_NAME</unix:service_name>
    <unix:runlevel operation="equals">5</unix:runlevel>
  </unix:runlevel_object>
  <unix:runlevel_object id="obj_runlevel6_SERVICE_NAME"
  version="1">
    <unix:service_name>SERVICE_NAME</unix:service_name>
    <unix:runlevel operation="equals">6</unix:runlevel>
  </unix:runlevel_object>
  <unix:runlevel_state comment="service is configured to start"
  id="state_service_on" version="1">
    <unix:start datatype="boolean">true</unix:start>
    <unix:kill datatype="boolean">false</unix:kill>
  </unix:runlevel_state>
</def-group>
